{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","pages/page-not-found.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","app.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","created","types","map","key","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","addPokemon","updatePokemon","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypesValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","PageNotFound","AuthenticationService","username","password","isAuthentificated","setTimeout","Login","message","setMessage","login","isAuthenticated","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","PokemonsList","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.206f2c12.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n}\n\nexport default formatDate;","const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'brown lighten-1'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n  }\n\nexport default formatType;","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n  \ntype Props = {\n  pokemon: Pokemon,\n  borderColor?: string\n};\n  \nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = 'green'}) => {\n    \nconst [color, setColor] = useState<string>();\nconst history = useHistory();\n\nconst showBorder = () => {\n    setColor(borderColor);\n}\n\nconst hideBorder = () => {\n    setColor('#f5f5f5'); // remise de la bordure en gris\n}\n\nconst goToPokemon = (id:number) => {\n  history.push(`/pokemons/${id}`);\n}\n\n  return (\n    <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal\" style={{ borderColor : color}} >\n        <div className=\"card-image\"> \n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n            {pokemon.types.map(type => (\n                <span key={type} className={formatType(type)}>{type}</span>\n            ))}\n          </div>\n        </div>\n      </div> \n    </div>\n  );\n}\n  \nexport default PokemonCard;","import Pokemon from './pokemon';\n   \nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n  \nexport default class PokemonService {\n  \n  static pokemons:Pokemon[] = POKEMONS;\n  \n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n  \n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n  \n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n  \n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n  \n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n  \n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n  \n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n  \n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  \n  }\n  \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n  \n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  useEffect(() => {\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\"> \n        <div className=\"row\">\n          <PokemonSearch />\n          {pokemons.map(pokemon => (\n            <PokemonCard key={pokemon.id} pokemon={pokemon}/>\n          ))}\n        </div>\n      </div>\n      <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\n        style={{position: 'fixed', bottom: '25px', right: '25px'}}\n        to=\"/pokemon/add\">\n        <i className=\"material-icons\">add</i>\n      </Link>\n    </div> \n  );\n}\n\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                  <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n\n  \ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean\n}\n\ntype Form = {\n    picture: Field,\n    name: Field,\n    hp: Field,\n    cp: Field,\n    types: Field\n}\n  \nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n  \n    const [form, setForm] = useState<Form>({\n        picture: {value: pokemon.picture},\n        name: {value: pokemon.name, isValid:true},\n        hp: {value: pokemon.hp, isValid:true},\n        cp: {value: pokemon.cp, isValid:true},\n        types: {value: pokemon.types, isValid:true}\n    })\n\n    const history = useHistory();\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n   \n  const hasType = (type: string): boolean => {\n      return form.types.value.includes(type);\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = {[fieldName]: { value: fieldValue}};\n\n    setForm({...form, ...newField});\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      const isFormValid = validateForm();\n\n      if(isFormValid) {\n        pokemon.picture = form.picture.value;\n        pokemon.name = form.name.value;\n        pokemon.hp = form.hp.value;\n        pokemon.cp = form.cp.value;\n        pokemon.types = form.types.value;\n\n        isEditForm ? updatePokemon() : addPokemon();\n      }\n  }\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push('/pokemons'));\n  }\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n\n  const isAddForm = () => {\n    return !isEditForm;\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator url\n    if(isAddForm()) {\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\"\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = \"L'url n'est pas valide\";\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false};\n        newForm = { ...form, ...{ picture: newField} };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true};\n        newForm = { ...form, ...{ picture: newField} };\n      }\n    }\n    \n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n  const isTypesValid = (type: string): boolean => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n    \n    // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n    if (form.types.value.length >= 3 && !hasType(type)) { \n      return false; \n    } \n    \n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n    return true;\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n          {isEditForm && (\n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {isAddForm() && (\n                  <div className=\"form-group\">\n                  <label htmlFor=\"name\">Image</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                  {form.picture.error &&\n                  <div className=\"card-panel red accent-1\">\n                      {form.picture.error}\n                  </div>}\n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error &&\n                  <div className=\"card-panel red accent-1\">\n                      {form.name.error}\n                  </div>}\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error &&\n                  <div className=\"card-panel red accent-1\">\n                      {form.hp.error}\n                  </div>}\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error &&\n                  <div className=\"card-panel red accent-1\">\n                      {form.cp.error}\n                  </div>}\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n\n\ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","export default class Pokemon {\n    // 1. Typage des propiétés d'un pokémon.\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n     \n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n    constructor(\n     id: number,\n     hp: number = 100,\n     cp: number = 10,\n     name: string = '...',\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n     types: Array<string> = ['Normal'],\n     created: Date = new Date()\n    ) {\n     // 3. Initialisation des propiétés d'un pokémons.\n     this.id = id;\n     this.hp = hp;\n     this.cp = cp;\n     this.name = name;\n     this.picture = picture;\n     this.types = types;\n     this.created = created;\n    }\n   }","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n\nconst PokemonAdd: FunctionComponent = () => {\n    const [id] = useState<number>(new Date().getTime());\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\n\n    return (\n        <div className=\"row\">\n            <h2 className=\"header center\">Ajouter un pokémon</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n        </div>\n    );\n}\n\nexport default PokemonAdd; ","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","export default class AuthenticationService {\n    static isAuthentificated: boolean = false;\n\n    static login(username: string, password: string): Promise<boolean> {\n        const isAuthentificated = (username === 'pikachu' && password === 'pikachu');\n\n        return new Promise(resolve => {\n            setTimeout(() => {\n                this.isAuthentificated = isAuthentificated;\n                resolve(isAuthentificated);\n            }, 1000);\n        });\n    }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthentificated;\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n\n    return <Component {...props} />\n  }} />\n);\n\nexport default PrivateRoute;","import React, { FunctionComponent } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PokemonsList from './pages/pokemon-list';\nimport PokemonsDetail from './pages/pokemon-detail';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonAdd from './pages/pokemon-add';\nimport PageNotFound from './pages/page-not-found';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n \nconst App: FunctionComponent = () => {\n \n  return (\n    <Router>\n      <div>\n      <nav> \n        <div className=\"nav-wrapper teal\">\n          <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\n        </div> \n      </nav>\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={PokemonsList} />\n        <Route exact path=\"/login\" component={Login} />\n        <PrivateRoute exact path=\"/pokemons\" component={PokemonsList} />\n        <PrivateRoute exact path=\"/pokemon/add\" component={PokemonAdd} />\n        <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\n        <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail} />\n        <Route component={PageNotFound} />\n      </Switch>\n      </div>\n    </Router>\n  );\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}